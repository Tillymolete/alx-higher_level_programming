>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([], 2)
[]

>>> matrix_divided([[], []], 3)
[[], []]

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], -0.5)
[[-2.0, -4.0, -6.0], [-8.0, -10.0, -12.0]]

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "str")
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3],[4, 5]], 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3],[4, 5, "s"]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("matrix", 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
